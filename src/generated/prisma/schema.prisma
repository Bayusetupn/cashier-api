generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model items {
  id                String              @id @db.VarChar(36)
  user_id           String              @db.VarChar(36)
  name              String              @db.VarChar(255)
  price             Decimal             @db.Decimal(10, 2)
  stock             Int                 @default(0)
  created_at        DateTime?           @default(now()) @db.DateTime(0)
  users             users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "items_ibfk_1")
  transaction_items transaction_items[]

  @@index([user_id], map: "user_id")
}

model transaction_items {
  id             String       @id @db.VarChar(36)
  transaction_id String       @db.VarChar(36)
  item_id        String?      @db.VarChar(36)
  name           String       @db.VarChar(255)
  quantity       Int
  price          Decimal      @db.Decimal(10, 2)
  subtotal       Decimal      @db.Decimal(10, 2)
  transactions   transactions @relation(fields: [transaction_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "transaction_items_ibfk_1")
  items          items?       @relation(fields: [item_id], references: [id], onUpdate: Restrict, map: "transaction_items_ibfk_2")

  @@index([item_id], map: "item_id")
  @@index([transaction_id], map: "transaction_id")
}

model transactions {
  id                String              @id @db.VarChar(36)
  user_id           String              @db.VarChar(36)
  date              DateTime?           @default(now()) @db.DateTime(0)
  total_price       Decimal             @db.Decimal(10, 2)
  transaction_items transaction_items[]
  users             users               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "transactions_ibfk_1")

  @@index([user_id], map: "user_id")
}

model users {
  id           String         @id @db.VarChar(36)
  name         String         @db.VarChar(100)
  email        String         @unique(map: "email") @db.VarChar(100)
  password     String         @db.VarChar(255)
  created_at   DateTime?      @default(now()) @db.DateTime(0)
  api_key      String         @unique(map: "api_key") @db.VarChar(36)
  items        items[]
  transactions transactions[]
}
